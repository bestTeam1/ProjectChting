<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.chting.dao.UserDao">
    <!-- 회원 기본 정보   -->
    <select id="selectUserInfo" resultType="com.team1.chting.dto.UserDto">
        select u.userid, u.nickname, u.profile_img, a.area_name as first_area_name, b.area_name as second_area_name, u.content,
               u.birth, u.email, u.logintype, gur.cnt
        from user_info u
                 join area a on u.first_area = a.area_code
                 join area b on u.second_area = b.area_code
                 left join (
            select userid, count(group_role_no) as cnt
            from group_user_role
            where userid = #{userid} and group_role_no = 1
            group by group_role_no
        )gur on u.userid = gur.userid
        where u.enabled = 1 and u.userid = #{userid}
    </select>

    <!-- 회원이 선택한 관심사 -->
    <select id="selectUserInterest" resultType="com.team1.chting.dto.UserDto">
        select u.userid, ic.catename
        from user_info u
                 join user_interest ui on u.userid = ui.userid
                 join interest_category ic on ui.catecode = ic.catecode
        where u.enabled = 1 and u.userid = #{userid}
        order by ic.catename
    </select>

    <!-- 회원 참여 모임 정보   -->
    <select id="selectUserJoinGroup" resultType="com.team1.chting.dto.UserDto">
        select u.userid, gi.group_name, gi.group_no
        from user_info u
                 join group_user_role gur on u.userid = gur.userid
                 join group_info gi on gur.group_no = gi.group_no
        where u.enabled = 1 and gi.enabled = 1 and u.userid = #{userid}
        order by gi.group_name
    </select>

    <!-- 회원 탈퇴 -->
    <delete id="deleteAcount">
        update user_info
        set enabled = 0, userid = CONCAT(userid, 'del')
        where userid = #{userid}
    </delete>

    <!--  회원 정보 수정  -->
    <update id="updateUser">
        update user_info
        set first_area = #{first_area}, second_area = #{second_area}, content = #{content}, profile_img = #{profile_img}
        where userid = #{userid}
    </update>

    <!--  회원 닉네임 조회  -->
    <select id="selectNickname" resultType="String">
        select nickname from user_info where userid = #{userid}
    </select>

    <!--  회원이 선택한 지역  -->
    <select id="selectAreacode" resultType="com.team1.chting.dto.UserDto">
        select first_area, second_area
        from user_info
        where userid = #{userid}
    </select>

    <!-- 모임장으로 속한 그룹 정보 -->
    <select id="getAdminGroup" resultType="com.team1.chting.dto.GroupDto">
        select group_no, group_name, group_img, catename, area_name, content
        from group_info
                 left join area a on group_info.area_code = a.area_code
                 left join interest_category ic on group_info.catecode = ic.catecode
        where enabled = 1 and group_no = #{groupNo}
    </select>
    <!-- 모임원으로 속한 그룹정보 -->
    <select id="getGroupList" resultType="com.team1.chting.dto.GroupDto">
        select gur.group_no, group_name, group_img, catename, area_name, content
        from group_info
                 left join area a on group_info.area_code = a.area_code
                 left join interest_category ic on group_info.catecode = ic.catecode
                 left join group_user_role gur on group_info.group_no = gur.group_no
        where enabled = 1 and group_role_no = "2" and gur.userid = #{userid}
    </select>
    <!-- 유저의 지역과 카테고리에 맞는 NEW 모임 리스트 -->
    <select id="getNewGroupByCate" resultType="com.team1.chting.dto.GroupDto">
        with temp as (
            select gi.group_no, gi.group_name, gi.group_img, gi.content, ic.catename, a.area_name, gi.opendate
            from user_info u
                     join group_info gi on u.first_area = gi.area_code or u.second_area = gi.area_code
                     join interest_category ic on gi.catecode = ic.catecode
                     join area a on gi.area_code = a.area_code
            where u.userid = #{userid} and gi.enabled = 1
            union
            select gi.group_no, gi.group_name, gi.group_img, gi.content, ic.catename, a.area_name, gi.opendate
            from user_interest ui
                     join group_info gi on ui.catecode = gi.catecode
                     join interest_category ic on gi.catecode = ic.catecode
                     join area a on gi.area_code = a.area_code
            where ui.userid = #{userid} and gi.enabled = 1)
        select * from temp
        order by opendate desc limit 8
    </select>
    <!-- 유저의 지역과 카테고리에 맞는 BEST 모임 리스트 -->
    <select id="getBestGroupByCate" resultType="com.team1.chting.dto.GroupDto">
        with temp as (
            select gi.group_no, gi.group_name, gi.group_img, gi.content, ic.catename, a.area_name, gi.opendate
            from user_info u
                     join group_info gi on u.first_area = gi.area_code or u.second_area = gi.area_code
                     join interest_category ic on gi.catecode = ic.catecode
                     join area a on gi.area_code = a.area_code
            where u.userid = #{userid} and gi.enabled = 1
            union
            select gi.group_no, gi.group_name, gi.group_img, gi.content, ic.catename, a.area_name, gi.opendate
            from user_interest ui
                     join group_info gi on ui.catecode = gi.catecode
                     join interest_category ic on gi.catecode = ic.catecode
                     join area a on gi.area_code = a.area_code
            where ui.userid = #{userid} and gi.enabled = 1)
        select *
        from temp
                 left join (select group_no, count(post_no)as cnt from post_group group by group_no)pg on temp.group_no = pg.group_no
        order by pg.cnt desc limit 8
    </select>

    <!-- 가입한 모든 그룹정보 -->
    <select id="getGroupListAll" resultType="com.team1.chting.dto.GroupDto">
        select gur.group_no, group_name, group_img, catename, area_name, content
        from group_info
                 left join area a on group_info.area_code = a.area_code
                 left join interest_category ic on group_info.catecode = ic.catecode
                 left join group_user_role gur on group_info.group_no = gur.group_no
        where enabled = 1 and gur.userid = #{userid}
        order by gur.group_role_no
    </select>
</mapper>