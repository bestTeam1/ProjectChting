<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://www.springframework.org/schema/security"
		 xmlns:context="http://www.springframework.org/schema/context"
		 xmlns:mvc="http://www.springframework.org/schema/mvc"
		 xmlns:util="http://www.springframework.org/schema/util"
		 xsi:schemaLocation="http://www.springframework.org/schema/security
 			https://www.springframework.org/schema/security/spring-security.xsd
 			http://www.springframework.org/schema/beans
 			https://www.springframework.org/schema/beans/spring-beans.xsd
 			http://www.springframework.org/schema/context
 			https://www.springframework.org/schema/context/spring-context.xsd
 			http://www.springframework.org/schema/mvc
 			https://www.springframework.org/schema/mvc/spring-mvc.xsd
 			http://www.springframework.org/schema/util
 			https://www.springframework.org/schema/util/spring-util.xsd">
	<!--
	>>form-login 속성 정의하기
	login-page : login form 페이지 URL
	username-parameter : form id의 name 속성값 (email >> id)
	password-parameter : form pw의 name 속성값
	login-processing-url : form action 값 (security를 이용해 인증처리)
	default-target-url : 로그인 성공 시 이동 URL
	authentication-failure-url : 로그인 실패 시 이동 URL
	always-use-default-target : true 로 하면 무조건 default-target-url 로 이동한다.
	false 로 하면 authentication-success-handler 대로 redirect 된다.
	authentication-success-handler-ref : 로그인 성공 시 프로세스 정의, bean id 입력
	만약 최종 로그인일시를 DB에 기록해야한다면 handler로 처리하는게 좋겠다.
	res.sendRedirect 등으로 처리
	authentication-failure-handler-ref : 로그인 실패 시 프로세스 정의, bean id 입력

	>> security:logout
	logout-url : 로그아웃 처리할 URL (security가 알아서 만들기 때문에, 이 경로로 요청만 하면된다)
	logout-success-url : 로그아웃 성공 시 이동 URL
	success-handler-ref : 로그아웃 성공 시 프로세스 정의, bean id 입력
	invalidate-session : 로그아웃 시 세션 삭제여부

	>>session-management
	invalid-session-url : invalid session(세션 타임아웃 등) 일 때 이동 URL
	max-sessions : 최대 허용 가능한 세션 수
	expired-url : 중복 로그인 발생시 이동 URL (처음 접속한 세션이 invalidate가 되고 다음 요청시 invalid-session-url로 이동)
	error-if-maximum-exceeded : max-sessions을 넘었을때 접속한 세션을 실패처리할지 여부 (expired-url와 얘중에 하나만 쓰면 될듯) > 두 번째 중복 로그인한 세션을 막으려면
	session-authentication-error-url : 에러 페이지가 따로 있다면
		-->
	<context:component-scan base-package="com.team1.chting" />
	<context:annotation-config />
	<mvc:annotation-driven />

	<http auto-config="true" >

		<intercept-url pattern="/login**" access="authenticated"/>
		<intercept-url pattern="/board_main.do" access="permitAll()"/>
		<intercept-url pattern="/signUp.do" access="hasAuthority('ROLE_GUEST')"/>
		<intercept-url pattern="/board**" access="hasAnyAuthority('ROLE_USER','ROLE_ADMIN')"/>
		<intercept-url pattern="/group**" access="hasAnyAuthority('ROLE_USER','ROLE_ADMIN')"/>
		<intercept-url pattern="/my**" access="hasAnyAuthority('ROLE_USER','ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')"/>
		<intercept-url pattern="/chart**" access="hasAuthority('ROLE_ADMIN')"/>

		<form-login login-page="/signIn.do" authentication-success-handler-ref="successHandler" />

		<oauth2-login user-service-ref="customOAuth2UserService"
					  authentication-success-handler-ref="successHandler" login-page="/signIn.do" />

		<logout logout-url="/logout" logout-success-url="/index.do" invalidate-session="true" delete-cookies="JSESSIONID"/>
		<csrf disabled="true" />
		<session-management invalid-session-url="/index.do?invalid" session-authentication-error-url="/index.do?sa-error" >
			<concurrency-control max-sessions="1" expired-url="/index.do?expired"/>
		</session-management>
	</http>

	<authentication-manager xmlns="http://www.springframework.org/schema/security">
		<authentication-provider>
			<user-service id="detailsManager">
				<user name="guest" password="{noop}1004" authorities="ROLE_GUEST"></user>
				<user name="user" password="{noop}1004" authorities="ROLE_USER"></user>
				<user name="admin" password="{noop}1004" authorities="ROLE_ADMIN"></user>
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<b:bean id="customOAuth2UserService" class="com.team1.chting.security.CustomOAuth2UserService" />
	<b:bean id="successHandler" class="com.team1.chting.security.CustomAuthenticationSuccessHandler" />

	<client-registrations>
		<client-registration registration-id="google-login"
							 client-id="162635883964-np8pt0krgmagle2cokr83s14ke9ee4mq.apps.googleusercontent.com"
							 client-secret="u6eqJ9NLyWP3ulxK6BLYdsBq"
							 client-authentication-method="basic"
							 authorization-grant-type="authorization_code"
							 redirect-uri="{baseUrl}/login/oauth2/code/{registrationId}"
							 scope="profile,email"
							 client-name="Google"
							 provider-id="google" />

		<client-registration registration-id="kakao-login"
							 client-id="b74ea6ac4d206b99a1c236e0f732f202"
							 client-authentication-method="basic"
							 authorization-grant-type="authorization_code"
							 redirect-uri="{baseUrl}/login/oauth2/code/{registrationId}"
							 client-name="Kakao"
							 scope=""
							 provider-id="kakao" />

		<client-registration registration-id="github-login"
							 client-id="2948216780ba49fadca1"
							 client-secret="7359f2c6589a89c85b3f08571545152d0578944b"
							 client-authentication-method="basic"
							 authorization-grant-type="authorization_code"
							 redirect-uri="{baseUrl}/login/oauth2/code/{registrationId}"
							 client-name="Github"
							 scope=""
							 provider-id="github" />

		<provider provider-id="google"
				  authorization-uri="https://accounts.google.com/o/oauth2/v2/auth"
				  token-uri="https://www.googleapis.com/oauth2/v4/token"
				  user-info-uri="https://www.googleapis.com/oauth2/v3/userinfo"
				  user-info-authentication-method="header"
				  user-info-user-name-attribute="sub"
				  jwk-set-uri="https://www.googleapis.com/oauth2/v3/certs" />

		<provider provider-id="kakao"
				  authorization-uri="https://kauth.kakao.com/oauth/authorize"
				  token-uri="https://kauth.kakao.com/oauth/token"
				  user-info-uri="https://kapi.kakao.com/v2/user/me"
				  user-info-authentication-method="header"
				  user-info-user-name-attribute="id"
				  jwk-set-uri="https://kapi.kakao.com/v1/user/access_token_info" />

		<provider provider-id="github"
				  authorization-uri="https://github.com/login/oauth/authorize"
				  token-uri="https://github.com/login/oauth/access_token"
				  user-info-uri="https://api.github.com/user"
				  user-info-authentication-method="header"
				  user-info-user-name-attribute="id" />

	</client-registrations>

</b:beans>